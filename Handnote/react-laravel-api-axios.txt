  ==== React with Laravel =====


https://legacy.reactjs.org/docs/faq-ajax.html

0. npm i axios

#laravel
1. php artisan make:controller frontend/BasicController

    public function index()
    {
        $basics = Basic::get();

        echo json_encode(['Success' => "Yes", 'datas' => $basics]);

    }


2. routes\Api.php

    use App\Http\Controllers\frontend\BasicController as FrontendBasicController;
    Route::get('/basic-frontend', [FrontendBasicController::class, 'index'])->name('basic.fe');


OR
    Route::get('/basic-fe', function () {
    $basics = Basic::get();
    return response()->json($basics);
    });


3. json data link
    http://127.0.0.1:8000/api/basic-fe


4. config\cors.php

     'allowed_origins' => ['http://localhost:3000/'],

    php artisan optimize


# react part : 

5. specific page.js

import axios from "axios";
import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";

function MyComponent() {

    const [error, setError] = useState(null);
    const [isLoaded, setIsLoaded] = useState(false);
    const [items, setItems] = useState([]);

    // Note: the empty deps array [] means
    // this useEffect will run once
    // similar to componentDidMount()
    useEffect(() => {
        fetch("https://api.example.com/items")
        .then(res => res.json())
        .then(
            (result) => {
            setIsLoaded(true);
            setItems(result);
            },
            // Note: it's important to handle errors here
            // instead of a catch() block so that we don't swallow
            // exceptions from actual bugs in components.
            (error) => {
            setIsLoaded(true);
            setError(error);
            }
        )
    }, [])



 if (error) {
    return <div>Error: {error.message}</div>;
  } else if (!isLoaded) {
    return <div>Loading...</div>;
  } else {
    return (
      <ul>
        {items.map(item => (
          <li key={item.id}>
            {item.name} {item.price}
          </li>
        ))}
      </ul>
    );
  }
}



